# Generated by Django 2.2.1 on 2019-08-01 23:47

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('img_url', models.CharField(blank=True, max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=20)),
                ('veces_usado', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Zona',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=20)),
                ('n_restaurantes', models.IntegerField(default=0)),
                ('img_path', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Restaurante',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=20)),
                ('descripcion', models.CharField(max_length=400)),
                ('n_resenas', models.IntegerField(default=0)),
                ('ubicacion', models.CharField(max_length=200)),
                ('calificacion_prom', models.IntegerField(default=0)),
                ('lat', models.FloatField()),
                ('lng', models.FloatField()),
                ('tags', models.ManyToManyField(blank=True, to='api.Tag')),
                ('zona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Zona')),
            ],
        ),
        migrations.CreateModel(
            name='ReservaPlanificacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mesas_totales', models.IntegerField()),
                ('mesas_disponibles', models.IntegerField()),
                ('fecha', models.DateTimeField()),
                ('restaurante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Restaurante')),
            ],
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField()),
                ('asistio', models.BooleanField()),
                ('asientos', models.IntegerField()),
                ('detalles', models.CharField(max_length=80)),
                ('reserva_planificacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.ReservaPlanificacion')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Resena',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calificacion_general', models.FloatField(default=0.0)),
                ('calificacion_comida', models.IntegerField()),
                ('calificacion_servicio', models.IntegerField()),
                ('calificacion_ambiente', models.IntegerField()),
                ('comentario', models.TextField()),
                ('fecha', models.DateTimeField(default=0)),
                ('restaurante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Restaurante')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FotosRestaurante',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img_path', models.CharField(max_length=50)),
                ('tipo', models.CharField(max_length=10)),
                ('tamano', models.CharField(default='small', max_length=10)),
                ('restaurante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Restaurante')),
            ],
        ),
        migrations.AddField(
            model_name='usuario',
            name='restaurantes_favoritos',
            field=models.ManyToManyField(blank=True, to='api.Restaurante'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
